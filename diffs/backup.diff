diff --git a/app/models/server.js b/app/models/server.js
index 2df3064..9621703 100644
--- a/app/models/server.js
+++ b/app/models/server.js
@@ -81,13 +81,12 @@ ircServer.prototype.setState = function(state, verbose)
 		case this.STATE_DISCONNECTED: message = "Disconnected!"; break;
 		case this.STATE_CONNECTING: message = "Connecting..."; break;
 		case this.STATE_CONNECTED: message = "Connected!"; break;
-		case this.STATE_DISRUPTED: this.disconnectTimout = setTimeout(this.disconnect.bind(this), this.dcThreshold); break;
 	}	
 	if (verbose && message.length>0)
 		this.newMessage('type3', false, message);
 	this.state = state;
 	if (servers.listAssistant && servers.listAssistant.controller)
-		servers.listAssistant.updateList();		
+		servers.listAssistant.updateList();
 }
 
 ircServer.prototype.cleanupSubscriptions = function()
@@ -394,15 +393,6 @@ ircServer.prototype.genericHandler = function(payload)
 	// idk what to do here if anything
 }
 
-ircServer.prototype.cancelDisconnectTimeout = function(reason)
-{
-	if (this.disconnectTimeout)
-	{
-		clearTimeout(this.disconnectTimeout);
-		this.disconnectTimeout = null;	
-	}
-}
-
 ircServer.prototype.disconnect = function(reason)
 {
 	if (this.isDisrupted())
diff --git a/app/models/servers.js b/app/models/servers.js
index 917ffb4..e5b1373 100644
--- a/app/models/servers.js
+++ b/app/models/servers.js
@@ -7,6 +7,17 @@ function ircServers()
 	
 	this.servers =			[];
 	this.listAssistant =	false;
+	
+	this.dTimeout =			null;
+}
+
+ircServers.prototype.disruptedHandler = function()
+{
+	for (var s=0; s<this.servers.length; s++)
+	{
+		if (this.servers[s].isDisrupted())
+			this.servers[s].disconnect();
+	}
 }
 
 ircServers.prototype.cmHandler = function(payload)
@@ -18,6 +29,8 @@ ircServers.prototype.cmHandler = function(payload)
 		return;	
 	}
 	
+	var disrupted = 0;
+	
 	var connectionInfoOld = connectionInfo;
 	connectionInfo = payload;
 	
@@ -26,20 +39,30 @@ ircServers.prototype.cmHandler = function(payload)
 		if (!connectionInfo.isInternetConnectionAvailable)
 		{
 			if (this.servers[s].isConnected())
-				this.servers[s].setState(this.servers[s].STATE_DISRUPTED, true);	
+			{
+				this.servers[s].setState(this.servers[s].STATE_DISRUPTED, true);
+				disrupted = 1;
+			}	
 		}
 		else
 		{
 			if (this.servers[s].isDisrupted())
 			{
-				this.servers[s].cancelDisconnectTimeout();
 				this.servers[s].setState(this.servers[s].STATE_CONNECTED, false);
+				disrupted = -1;
 			}
 			else if (this.servers[s].needsReconnect())
 				this.servers[s].init();
 		}
 	}
-		
+	
+	if (disrupted==1)
+		this.dTimeout = setTimeout(this.disruptedHandler.bind(this), 60000);
+	else if (disrupted==-1)
+	{
+		clearTimeout(this.dTimeout);
+		this.dTimeout = null;	
+	}
 }
 
 /*ircServers.prototype.cmHandler = function(payload)
